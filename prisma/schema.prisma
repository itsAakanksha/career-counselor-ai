// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}



model User {
    id        String   @id @default(cuid())
    email     String   @unique
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt


    // Chat relationships
    chatSessions ChatSession[]

    @@map("users")
}

model ChatSession {
    id            String   @id @default(cuid())
    userId        String?
    title         String
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    lastMessageAt DateTime @default(now())
    isActive      Boolean  @default(true)

    user     User?     @relation(fields: [userId], references: [id], onDelete: SetNull)
    messages Message[]

    @@index([userId])
    @@index([lastMessageAt(sort: Desc)])
    @@map("chat_sessions")
}

model Message {
    id            String      @id @default(cuid())
    chatSessionId String
    content       String
    role          MessageRole
    createdAt     DateTime    @default(now())
    metadata      Json?

    chatSession ChatSession @relation(fields: [chatSessionId], references: [id], onDelete: Cascade)

    @@index([chatSessionId])
    @@map("messages")
}

enum MessageRole {
    user
    assistant
}
